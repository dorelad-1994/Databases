<!DOCTYPE html>
<!-- saved from url=(0117)https://docs.google.com/document/u/1/d/e/2PACX-1vRn6esmt4SNU4tU-iStPERIEJQPV4SSmBtIvmGEPWCvT0GzaTSpkjkp4u1hOtaGHg/pub -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>assignment3.docx</title><link rel="shortcut icon" href="https://ssl.gstatic.com/docs/documents/images/kix-favicon7.ico"><meta name="referrer" content="strict-origin-when-cross-origin"><style type="text/css" nonce="">
      @import url("https://fonts.googleapis.com/css?family=Google+Sans");
      @import url("https://fonts.googleapis.com/css?family=Roboto");

      body {
        font-family: Roboto, arial, sans, sans-serif;
        margin: 0;
      }

      iframe {
        border: 0;
        frameborder: 0;
        height: 100%;
        width: 100%;
      }

      #banners {
        align-items: center;
        background: white;
        display: block;
        justify-content: space-between;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 100;
      }

      #banners #publish-banner {
        background-color: #e8f0fe;
        border-bottom: 1px #ccc solid;
        color: #202124;
        display: flex;
        flex: 1 1 0%;
        height: 60px;
        width: 100%;
      }

      #publish-banner-icon {
        display: flex;
        fill: #1967d2;
        margin: auto 20px;
      }

      #publish-banner-text {
        flex-grow: 1;
        margin: auto 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      #publish-banner-buttons {
        margin: auto 25px auto 0;
      }

      #publish-banner-buttons span {
        align-self: center;
        background-color: inherit;
        border: none;
        font-family: "Google Sans", Roboto, RobotoDraft, Helvetica, Arial, sans-serif;
        margin: 0 16px 0 32px;
      }

      #publish-banner-buttons a {
        color: #1967d2;
        cursor: pointer;
        font-family: "Google Sans", Roboto, RobotoDraft, Helvetica, Arial, sans-serif;
        font-size: 14px;
        font-weight: 500;
        line-height: 24px;
        text-decoration: none;
      }

      #banners #title-banner {
        background: white;
        border-bottom: 1px #ccc solid;
        display: flex;
        flex: 1 1 0%;
        height: 60px;
        width: 100%;
      }

      #banners #title-banner #title {
        flex-grow: 1;
        font-family: 'Google Sans';
        font-size: large;
        margin: auto 0 auto 20px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 70%;
      }

      #banners #title-banner #interval {
        margin: auto 25px auto 0;
        font-family: Roboto;
        font-size: small;;
      }

      #footer {
        background: #f0f0f0;
        border-bottom: 1px #ccc solid;
        bottom: 0;
        font-family: Roboto;
        font-size: small;
        padding: 10px 10px;
        position: fixed;
        text-align: center;
        width: 100%;
      }

      #contents {
        padding: 100px 20% 50px 20%;
      }

      @media only screen and (max-device-width: 800px) {
        #banners #title-banner {
          border-bottom-width: 5px;
          height: auto;
          display: block;
        }

        #banners #title-banner #title {
          font-size: 3em;
          margin: auto 0 auto 20px;
          width: 90%;
        }

        #banners #title-banner #interval {
          font-size: 1.5em;
          margin: 10px 0 auto 25px;
        }

        #contents {
          padding: 150px 5% 80px;
        }

        #footer {
          font-size: 2em;
        }
      }

      .dash {
        padding: 0 6px;
      }
    </style></head><body _c_t_common="1"><div id="banners"><div id="publish-banner"><span id="publish-banner-icon"><svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px"><path d="M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></svg></span><div id="publish-banner-text">פורסם באמצעות Google Docs</div><div id="publish-banner-buttons"><span><a target="_blank" title="Learn more" href="https://support.google.com/docs/answer/183965">מידע נוסף</a></span><span><a href="https://docs.google.com/u/1/abuse?id=AKkXjow3dB7dJm3NHjpfDu0KkZHOdSkP0FUT5VXm0xVwq1WsgNYihxDsAl0kD76Vncg1W-Bi:0">דיווח על שימוש לרעה</a></span></div></div><div id="title-banner"><div id="title">assignment3.docx</div><div id="interval"><span>מעודכן אוטומטית כל 5 דקות</span></div></div></div><div id="contents"><style type="text/css">@import url('https://themes.googleusercontent.com/fonts/css?kit=fpjTOVmNbO4Lz34iLyptLUXza5VhXqVC6o75Eld_V98');ul.lst-kix_list_1-0{list-style-type:none}.lst-kix_list_3-0>li:before{content:"\0025cf  "}ul.lst-kix_list_5-7{list-style-type:none}ul.lst-kix_list_5-8{list-style-type:none}.lst-kix_list_3-1>li:before{content:"\0025cb  "}.lst-kix_list_3-2>li:before{content:"\0025a0  "}ul.lst-kix_list_5-5{list-style-type:none}ul.lst-kix_list_5-6{list-style-type:none}ul.lst-kix_list_1-3{list-style-type:none}.lst-kix_list_3-5>li:before{content:"\0025a0  "}ul.lst-kix_list_5-0{list-style-type:none}ul.lst-kix_list_1-4{list-style-type:none}ul.lst-kix_list_1-1{list-style-type:none}.lst-kix_list_3-4>li:before{content:"\0025cb  "}ul.lst-kix_list_1-2{list-style-type:none}ul.lst-kix_list_5-3{list-style-type:none}ul.lst-kix_list_1-7{list-style-type:none}.lst-kix_list_3-3>li:before{content:"\0025cf  "}ul.lst-kix_list_5-4{list-style-type:none}ul.lst-kix_list_1-8{list-style-type:none}ul.lst-kix_list_5-1{list-style-type:none}ul.lst-kix_list_1-5{list-style-type:none}ul.lst-kix_list_5-2{list-style-type:none}ul.lst-kix_list_1-6{list-style-type:none}.lst-kix_list_3-8>li:before{content:"\0025a0  "}.lst-kix_list_2-0>li{counter-increment:lst-ctn-kix_list_2-0}.lst-kix_list_3-6>li:before{content:"\0025cf  "}.lst-kix_list_3-7>li:before{content:"\0025cb  "}.lst-kix_list_5-0>li:before{content:"\0025cf  "}ol.lst-kix_list_2-0{list-style-type:none}.lst-kix_list_4-8>li:before{content:"\0025aa  "}.lst-kix_list_5-3>li:before{content:"\0025cf  "}.lst-kix_list_4-7>li:before{content:"o  "}.lst-kix_list_5-2>li:before{content:"\0025aa  "}.lst-kix_list_5-1>li:before{content:"o  "}li.li-bullet-6:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}li.li-bullet-7:before{margin-left:-31.6pt;white-space:nowrap;display:inline-block;min-width:31.6pt}ul.lst-kix_list_4-8{list-style-type:none}.lst-kix_list_5-7>li:before{content:"o  "}ul.lst-kix_list_4-6{list-style-type:none}.lst-kix_list_5-6>li:before{content:"\0025cf  "}.lst-kix_list_5-8>li:before{content:"\0025aa  "}ul.lst-kix_list_4-7{list-style-type:none}li.li-bullet-10:before{margin-left:-31.6pt;white-space:nowrap;display:inline-block;min-width:31.6pt}ul.lst-kix_list_4-0{list-style-type:none}ul.lst-kix_list_4-1{list-style-type:none}.lst-kix_list_5-4>li:before{content:"o  "}ul.lst-kix_list_4-4{list-style-type:none}.lst-kix_list_5-5>li:before{content:"\0025aa  "}ul.lst-kix_list_4-5{list-style-type:none}ul.lst-kix_list_4-2{list-style-type:none}ul.lst-kix_list_4-3{list-style-type:none}li.li-bullet-2:before{margin-left:-18.1pt;white-space:nowrap;display:inline-block;min-width:18.1pt}.lst-kix_list_2-6>li:before{content:"\002022  "}.lst-kix_list_2-7>li:before{content:"\002022  "}.lst-kix_list_2-4>li:before{content:"\002022  "}.lst-kix_list_2-5>li:before{content:"\002022  "}.lst-kix_list_2-8>li:before{content:"\002022  "}ul.lst-kix_list_3-7{list-style-type:none}ul.lst-kix_list_3-8{list-style-type:none}ul.lst-kix_list_3-1{list-style-type:none}ul.lst-kix_list_3-2{list-style-type:none}ul.lst-kix_list_3-0{list-style-type:none}ul.lst-kix_list_3-5{list-style-type:none}ul.lst-kix_list_3-6{list-style-type:none}ul.lst-kix_list_3-3{list-style-type:none}ul.lst-kix_list_3-4{list-style-type:none}li.li-bullet-1:before{margin-left:-31.6pt;white-space:nowrap;display:inline-block;min-width:31.6pt}.lst-kix_list_4-0>li:before{content:"\0025cf  "}.lst-kix_list_4-1>li:before{content:"o  "}li.li-bullet-3:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_list_4-4>li:before{content:"o  "}.lst-kix_list_4-3>li:before{content:"\0025cf  "}.lst-kix_list_4-5>li:before{content:"\0025aa  "}.lst-kix_list_4-2>li:before{content:"\0025aa  "}.lst-kix_list_4-6>li:before{content:"\0025cf  "}li.li-bullet-8:before{margin-left:-23.8pt;white-space:nowrap;display:inline-block;min-width:23.8pt}li.li-bullet-9:before{margin-left:-23.6pt;white-space:nowrap;display:inline-block;min-width:23.6pt}li.li-bullet-5:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ul.lst-kix_list_2-8{list-style-type:none}li.li-bullet-11:before{margin-left:-31.6pt;white-space:nowrap;display:inline-block;min-width:31.6pt}ul.lst-kix_list_2-2{list-style-type:none}.lst-kix_list_1-0>li:before{content:"\0025cf  "}ul.lst-kix_list_2-3{list-style-type:none}ul.lst-kix_list_2-1{list-style-type:none}ul.lst-kix_list_2-6{list-style-type:none}.lst-kix_list_1-1>li:before{content:"-  "}.lst-kix_list_1-2>li:before{content:"\002022  "}ol.lst-kix_list_2-0.start{counter-reset:lst-ctn-kix_list_2-0 0}ul.lst-kix_list_2-7{list-style-type:none}ul.lst-kix_list_2-4{list-style-type:none}ul.lst-kix_list_2-5{list-style-type:none}.lst-kix_list_1-3>li:before{content:"\002022  "}.lst-kix_list_1-4>li:before{content:"\002022  "}.lst-kix_list_1-7>li:before{content:"\002022  "}.lst-kix_list_1-5>li:before{content:"\002022  "}.lst-kix_list_1-6>li:before{content:"\002022  "}li.li-bullet-0:before{margin-left:-23.6pt;white-space:nowrap;display:inline-block;min-width:23.6pt}li.li-bullet-4:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_list_2-0>li:before{content:"" counter(lst-ctn-kix_list_2-0,decimal) ". "}.lst-kix_list_2-1>li:before{content:"\002022  "}.lst-kix_list_1-8>li:before{content:"\002022  "}.lst-kix_list_2-2>li:before{content:"\002022  "}.lst-kix_list_2-3>li:before{content:"\002022  "}ol{margin:0;padding:0}table td,table th{padding:0}.c38{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:70pt;border-top-color:#000000;border-bottom-style:solid}.c136{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:90.8pt;border-top-color:#000000;border-bottom-style:solid}.c86{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#999999;border-top-width:1.5pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:211.2pt;border-top-color:#666666;border-bottom-style:solid}.c246{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#666666;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1.5pt;width:220.3pt;border-top-color:#999999;border-bottom-style:solid}.c80{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:139.5pt;border-top-color:#000000;border-bottom-style:solid}.c55{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#999999;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:211.2pt;border-top-color:#999999;border-bottom-style:solid}.c138{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:69pt;border-top-color:#000000;border-bottom-style:solid}.c153{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:148.5pt;border-top-color:#000000;border-bottom-style:solid}.c50{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:70.5pt;border-top-color:#000000;border-bottom-style:solid}.c185{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:68.3pt;border-top-color:#000000;border-bottom-style:solid}.c112{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:67.6pt;border-top-color:#000000;border-bottom-style:solid}.c76{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:84.8pt;border-top-color:#000000;border-bottom-style:solid}.c213{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:191.2pt;border-top-color:#000000;border-bottom-style:solid}.c89{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:66.8pt;border-top-color:#000000;border-bottom-style:solid}.c208{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:86.8pt;border-top-color:#000000;border-bottom-style:solid}.c221{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:132.8pt;border-top-color:#000000;border-bottom-style:solid}.c238{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#666666;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1.5pt;width:211.2pt;border-top-color:#999999;border-bottom-style:solid}.c37{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:64.6pt;border-top-color:#000000;border-bottom-style:solid}.c47{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:108.8pt;border-top-color:#000000;border-bottom-style:solid}.c97{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#999999;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:220.3pt;border-top-color:#999999;border-bottom-style:solid}.c88{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:96.8pt;border-top-color:#000000;border-bottom-style:solid}.c230{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#999999;border-top-width:1.5pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#999999;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:220.3pt;border-top-color:#666666;border-bottom-style:solid}.c10{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:78.8pt;border-top-color:#000000;border-bottom-style:solid}.c8{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:81pt;border-top-color:#000000;border-bottom-style:solid}.c144{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:78pt;border-top-color:#000000;border-bottom-style:solid}.c200{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:122.2pt;border-top-color:#000000;border-bottom-style:solid}.c145{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:201.1pt;border-top-color:#000000;border-bottom-style:solid}.c22{border-right-style:solid;padding:5pt 0pt 5pt 0pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:199.6pt;border-top-color:#000000;border-bottom-style:solid}.c65{margin-left:43pt;padding-top:0pt;list-style-position:inside;text-indent:18pt;padding-bottom:0pt;line-height:1.8166666666666667;text-align:left;margin-right:126.2pt}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:9.5pt;font-family:"Calibri";font-style:normal}.c49{margin-left:43pt;padding-top:6pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:left;margin-right:19.1pt}.c84{margin-left:43pt;padding-top:6pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.9pt}.c9{margin-left:43pt;padding-top:0pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.7pt}.c16{margin-left:79pt;padding-top:0.5pt;padding-left:0pt;padding-bottom:0pt;line-height:0.9666666666666667;text-align:justify;margin-right:18.6pt}.c28{margin-left:43pt;padding-top:0pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.8pt}.c127{margin-left:43pt;padding-top:4pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:left;margin-right:19.1pt}.c11{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:"Calibri";font-style:normal}.c93{margin-left:8.8pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:8.3pt}.c39{margin-left:15.9pt;padding-top:0pt;padding-bottom:0pt;line-height:1.3458333333333332;text-align:center;margin-right:15.4pt}.c207{margin-left:13.6pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center;margin-right:13.2pt}.c116{margin-left:15.9pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:15.4pt}.c122{margin-left:23.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:23.1pt}.c227{margin-left:23.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:22.9pt}.c137{margin-left:24.9pt;padding-top:1pt;padding-left:5.8pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c51{margin-left:7pt;padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:19pt}.c87{margin-left:43pt;padding-top:0.2pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c241{margin-left:22.7pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:22pt}.c244{margin-left:19.1pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:18.6pt}.c1{margin-left:43pt;padding-top:6pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c109{margin-left:43pt;padding-top:2pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.9pt}.c79{margin-left:19.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:18.7pt}.c71{margin-left:7pt;padding-top:12pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:19pt}.c155{margin-left:24.9pt;padding-top:1pt;padding-left:13.6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c46{margin-left:19.6pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:19.4pt}.c66{margin-left:19.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center;margin-right:18.9pt}.c58{margin-left:19.6pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center;margin-right:19.4pt}.c198{margin-left:27.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center;margin-right:26.9pt}.c33{margin-left:7pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.8pt}.c14{margin-left:23.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:23pt}.c27{margin-left:20.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:19.9pt}.c62{margin-left:10.1pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:9.6pt}.c206{margin-left:20.9pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:20.4pt}.c135{margin-left:29.6pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:29.6pt}.c189{margin-left:20.9pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:20.6pt}.c42{margin-left:44.1pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:44pt}.c199{margin-left:15.9pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center;margin-right:15.4pt}.c202{margin-left:13.6pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:13.1pt}.c99{margin-left:25pt;padding-top:12pt;padding-left:13.6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c179{margin-left:23.4pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:23pt}.c218{margin-left:27.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:26.9pt}.c73{margin-left:43pt;padding-top:0pt;padding-left:0pt;padding-bottom:0pt;line-height:1.2708333333333333;text-align:left}.c228{margin-left:22.6pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:22.1pt}.c18{margin-left:7pt;padding-top:8.8pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.9pt}.c44{margin-left:7pt;padding-top:11.9pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.8pt}.c229{margin-left:146pt;padding-top:0pt;padding-bottom:0pt;line-height:2.6833333333333336;text-align:center;margin-right:157.8pt}.c119{margin-left:43pt;padding-top:6pt;padding-left:0pt;padding-bottom:0pt;line-height:1.2708333333333333;text-align:left}.c67{color:#000000;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:"Noto Sans Symbols";font-style:normal}.c121{margin-left:17.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:17.1pt}.c30{margin-left:7pt;padding-top:6pt;padding-bottom:0pt;line-height:1.4083333333333332;text-align:left;margin-right:29.7pt}.c168{margin-left:8.8pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:8.4pt}.c165{margin-left:19.1pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:18.9pt}.c7{margin-left:7pt;padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.8pt}.c128{margin-left:17.8pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:17.4pt}.c120{margin-left:43pt;padding-top:0pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:left;margin-right:14.4pt}.c96{margin-left:23.4pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center;margin-right:23.1pt}.c192{margin-left:20.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center;margin-right:20.1pt}.c195{margin-left:0.3pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:center}.c108{margin-left:43pt;padding-top:0.2pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c35{margin-left:7pt;padding-top:0pt;padding-bottom:0pt;line-height:1.2125000000000001;text-align:justify}.c224{padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:right;margin-right:20.9pt}.c225{margin-left:21.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:left}.c231{padding-top:11.9pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.7pt}.c4{font-weight:400;text-decoration:none;vertical-align:baseline;font-family:"Calibri";font-style:normal}.c126{padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:right;margin-right:22.2pt}.c40{margin-left:5.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:left}.c29{margin-left:7pt;padding-top:8pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c113{margin-left:0.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1375;text-align:center}.c163{padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:right;margin-right:20.9pt}.c78{padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:right;margin-right:14.1pt}.c175{padding-top:9.2pt;padding-bottom:0pt;line-height:1.0791666666666666;text-align:left;margin-right:14.8pt}.c106{padding-top:13.8pt;padding-bottom:0pt;line-height:1.0;text-align:left;margin-right:323.2pt}.c190{margin-left:5.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1375;text-align:left}.c36{font-weight:400;text-decoration:none;vertical-align:baseline;font-family:"Noto Sans Symbols";font-style:normal}.c92{margin-left:5.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:left}.c95{margin-left:0.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center}.c114{padding-top:2.6pt;padding-bottom:0pt;line-height:1.4083333333333332;text-align:left;margin-right:137pt}.c123{padding-top:12.1pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:19.1pt}.c82{padding-top:11.9pt;padding-bottom:0pt;line-height:1.0;text-align:justify;margin-right:18.6pt}.c60{margin-left:0.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center}.c34{margin-left:5.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:left}.c188{margin-left:22.9pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:left}.c220{margin-left:5.3pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:left}.c103{padding-top:2.6pt;padding-bottom:0pt;line-height:1.4083333333333332;text-align:left;margin-right:127pt}.c201{margin-left:5.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1375;text-align:left}.c125{margin-left:0.5pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center}.c172{margin-left:5.3pt;padding-top:0pt;padding-bottom:0pt;line-height:1.3458333333333332;text-align:left}.c217{margin-left:0.2pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:center}.c129{padding-top:7.9pt;padding-bottom:0pt;line-height:1.0791666666666666;text-align:justify;margin-right:18.9pt}.c70{margin-left:31pt;padding-top:6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c237{padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:right;margin-right:22.2pt}.c215{padding-top:6pt;padding-left:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c48{margin-left:7pt;padding-top:6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c105{padding-top:8.8pt;padding-bottom:0pt;line-height:1.0791666666666666;text-align:left;margin-right:34.5pt}.c77{margin-left:0.4pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center}.c115{padding-top:6pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:left;margin-right:19.1pt}.c181{margin-left:5.2pt;padding-top:0.1pt;padding-bottom:0pt;line-height:1.1375;text-align:left}.c149{margin-left:0.1pt;padding-top:0pt;padding-bottom:0pt;line-height:1.1333333333333333;text-align:center}.c140{padding-top:9.2pt;padding-bottom:0pt;line-height:1.0791666666666666;text-align:justify;margin-right:18.9pt}.c57{padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:right;margin-right:12.8pt}.c191{padding-top:2.5pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c178{padding-top:0.5pt;padding-bottom:0.1pt;line-height:1.0;text-align:left}.c160{padding-top:0pt;padding-bottom:0pt;line-height:1.2541666666666667;text-align:left}.c182{padding-top:0.2pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c156{margin-left:84.2pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c177{padding-top:0pt;padding-bottom:0pt;line-height:1.4333333333333333;text-align:left}.c12{text-decoration:none;vertical-align:baseline;font-family:"Calibri";font-style:normal}.c210{padding-top:12pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c90{padding-top:0pt;padding-bottom:0pt;line-height:1.1458333333333333;text-align:left}.c56{margin-left:42.5pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c5{padding-top:0.4pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c74{padding-top:0pt;padding-bottom:0pt;line-height:1.2125000000000001;text-align:left}.c187{padding-top:2.6pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c183{padding-top:0.4pt;padding-bottom:0.1pt;line-height:1.0;text-align:left}.c133{padding-top:0pt;padding-bottom:0pt;line-height:1.4208333333333334;text-align:left}.c170{text-decoration:none;vertical-align:baseline;font-family:"Trebuchet MS";font-style:normal}.c184{margin-left:86.7pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c158{padding-top:4pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c20{padding-top:0pt;padding-bottom:0pt;line-height:1.2249999999999999;text-align:left}.c151{padding-top:2.5pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c174{padding-top:0pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:left}.c94{padding-top:8.7pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c69{padding-top:0.1pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c196{padding-top:9.1pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c15{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c152{padding-top:11.9pt;padding-bottom:0pt;line-height:1.2125000000000001;text-align:left}.c234{padding-top:6.1pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c203{padding-top:0pt;padding-bottom:0pt;line-height:1.2666666666666666;text-align:left}.c173{padding-top:6pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c130{margin-left:182.8pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c107{padding-top:4pt;padding-bottom:0pt;line-height:1.2708333333333333;text-align:left}.c147{padding-top:0pt;padding-bottom:0pt;line-height:1.1500000000000001;text-align:left}.c243{padding-top:1.2pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c186{padding-top:2.6pt;padding-bottom:0pt;line-height:1.2125000000000001;text-align:left}.c85{text-decoration:none;vertical-align:baseline;font-family:"Noto Sans Symbols";font-style:normal}.c101{padding-top:2.6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c142{margin-left:90.5pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c139{padding-top:9.1pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c118{margin-left:7.2pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c236{padding-top:12.1pt;padding-bottom:0pt;line-height:1.2125000000000001;text-align:left}.c197{padding-top:0.1pt;padding-bottom:0pt;line-height:1.2708333333333333;text-align:left}.c75{padding-top:11.8pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c222{padding-top:11.9pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:justify}.c25{padding-top:0.6pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c111{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c204{margin-left:116.3pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c193{padding-top:0pt;padding-bottom:12pt;line-height:1.0;text-align:justify}.c242{padding-top:8.9pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c150{padding-top:5.9pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c209{padding-top:8.6pt;padding-bottom:0pt;line-height:1.0083333333333333;text-align:left}.c239{padding-top:12.1pt;padding-bottom:0pt;line-height:1.0;text-align:justify}.c21{padding-top:0.5pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c159{margin-left:3.5pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c117{padding-top:5.8pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c194{padding-top:1pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c143{padding-top:0pt;padding-bottom:0pt;line-height:1.4208333333333334;text-align:justify}.c81{padding-top:0.3pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c100{padding-top:0pt;padding-bottom:0pt;line-height:1.2208333333333334;text-align:left}.c166{padding-top:9.2pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c247{padding-top:11.9pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c226{padding-top:0.1pt;padding-bottom:0pt;line-height:1.1500000000000001;text-align:left}.c148{margin-left:14pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c212{border-spacing:0;border-collapse:collapse;margin-right:auto}.c63{vertical-align:baseline;font-family:"Calibri";font-style:normal}.c43{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c0{font-size:12pt;color:#000000;font-weight:700}.c26{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:underline}.c162{color:#000000;font-size:16.5pt}.c216{color:#000000;font-size:21.5pt}.c45{color:#000000;font-size:11.5pt}.c19{color:#000000;font-size:4.5pt}.c13{font-size:12pt;font-weight:700}.c32{color:#000000;font-size:11pt}.c132{margin-left:43pt;padding-left:0pt}.c219{margin-left:24.9pt;padding-left:13.6pt}.c83{color:#5b9ad4;font-size:14pt}.c53{color:#000000;font-size:14.5pt}.c68{color:#000000;font-size:10pt}.c24{padding:0;margin:0}.c161{color:#000000;font-size:24pt}.c154{margin-left:25pt;padding-left:13.6pt}.c176{margin-left:25pt;padding-left:5.6pt}.c131{color:#000000;font-size:14pt}.c41{color:#000000;font-size:7pt}.c102{color:#000000;font-size:9.5pt}.c3{color:#000000;font-size:12pt}.c167{color:#000000;font-size:28pt}.c61{color:#000000;font-size:9pt}.c72{margin-left:7pt}.c6{height:14.6pt}.c233{margin-left:25pt}.c54{height:0pt}.c245{height:14.2pt}.c235{padding-left:0pt}.c157{margin-left:36pt}.c205{margin-right:14.4pt}.c104{background-color:#ffff00}.c211{margin-right:26.4pt}.c146{height:14pt}.c64{font-weight:700}.c134{height:17.1pt}.c141{margin-left:43pt}.c17{height:11pt}.c110{margin-right:81.2pt}.c124{margin-right:18.8pt}.c232{margin-left:7.5pt}.c214{font-weight:400}.c59{font-style:italic}.c180{text-indent:29pt}.c164{height:17.2pt}.c223{margin-left:31pt}.c98{margin-right:19pt}.c169{margin-left:79pt}.c240{margin-right:18.7pt}.c31{height:14.7pt}.c91{color:#5b9ad4}.c23{font-size:12pt}.c52{text-indent:36pt}.c171{margin-right:19.1pt}.title{padding-top:0pt;color:#000000;font-size:28pt;padding-bottom:0pt;font-family:"Calibri";line-height:1.0;text-align:center}.subtitle{padding-top:18pt;color:#666666;font-size:24pt;padding-bottom:4pt;font-family:"Georgia";line-height:1.0;page-break-after:avoid;font-style:italic;text-align:left}li{color:#000000;font-size:11pt;font-family:"Calibri"}p{margin:0;color:#000000;font-size:11pt;font-family:"Calibri"}h1{padding-top:0pt;color:#000000;font-weight:700;font-size:16pt;padding-bottom:0pt;font-family:"Calibri";line-height:1.0;text-align:left}h2{padding-top:0pt;color:#000000;font-weight:700;font-size:14pt;padding-bottom:0pt;font-family:"Calibri";line-height:1.0;text-align:left}h3{padding-top:0pt;-webkit-text-decoration-skip:none;color:#000000;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none;font-size:12pt;padding-bottom:0pt;font-family:"Calibri";line-height:1.0;text-align:left}h4{padding-top:12pt;color:#000000;font-weight:700;font-size:12pt;padding-bottom:2pt;font-family:"Calibri";line-height:1.0;page-break-after:avoid;text-align:left}h5{padding-top:11pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:2pt;font-family:"Calibri";line-height:1.0;page-break-after:avoid;text-align:left}h6{padding-top:10pt;color:#000000;font-weight:700;font-size:10pt;padding-bottom:2pt;font-family:"Calibri";line-height:1.0;page-break-after:avoid;text-align:left}</style><div class="c43"><p class="c229 title"><span class="c4 c167">&nbsp;SPL- 211 Assignment 3</span></p><p class="c72 c106"><span class="c3">Published on: 17/12/2020</span><span class="c23"><br></span><span class="c3">Due date: &nbsp;07/01/2021</span></p><p class="c100 c72"><span class="c23">Responsible TA’s: </span><span class="c12 c0">Ameer Abu Ganeem, Doron Cohen</span></p><p class="c5 c17"><span class="c12 c32 c64"></span></p><ul class="c24 lst-kix_list_3-0 start"><li class="c15 c176 li-bullet-0"><h1 style="display:inline"><span class="c11">General Description</span></h1></li></ul><p class="c72 c123"><span class="c4 c3 c104">Please read the WHOLE assignment description before start implementing.</span></p><p class="c71"><span class="c4 c3">We all know how bad the university’s “Course Registration System” is, now you may have a chance to change it :-)</span></p><p class="c71"><span class="c4 c3">In this assignment you will implement a “Course Registration System” server and client. The communication between the server and the client(s) will be performed using a binary communication protocol.</span></p><p class="c193"><span class="c2">&nbsp;</span></p><p class="c51"><span class="c23">The implementation of the server is based on the </span><span class="c13">Thread-Per-Client (TPC) </span><span class="c23">and </span><span class="c13">Reactor </span><span class="c4 c3">servers taught in class.</span></p><p class="c51"><span class="c23">&nbsp;</span></p><p class="c51"><span class="c4 c3">You are required to implement the BGRS (Ben Gurion Registration System) protocol, which emulates a simple course registration system.</span></p><p class="c51"><span class="c23">The messages in this protocol are binary numbers, composed of an </span><span class="c13">opcode</span><span class="c23">&nbsp;(</span><span class="c59 c23">short</span><span class="c4 c3">&nbsp;number of two bytes) which indicates the command, and the data needed for this command (in various lengths).</span></p><p class="c51"><span class="c4 c3">In the following sections, we define the specifications of the commands supported by the BGRS protocol.</span></p><p class="c193"><span class="c2">&nbsp;</span></p><p class="c51"><span class="c23">Unlike real course registration systems, the courses are specified in one file, according to a specific format (shown below). The data which the server and clients get during their running are saved in the RAM (in data structures, </span><span class="c59 c23">e.g.</span><span class="c4 c3">, arrays, lists, etc…)</span></p><p class="c111 c72 c17 c171"><span class="c4 c3"></span></p><ul class="c24 lst-kix_list_3-1 start"><li class="c194 c154 li-bullet-1"><h2 style="display:inline"><span class="c12 c131 c64">Establishing a client/server connection</span></h2></li></ul><p class="c71"><span class="c4 c3">Upon connecting, a client must identify himself to the service. A new client will issue a Register command with the requested user name and password. A registered client can then login using the Login command. Once the command is sent, the server will acknowledge the validity of the username and password. Once a user is logged in successfully, she can submit other commands. The register and login commands are stated in the following section. Note that the register command will not perform automatic login (you will need to call login after it).</span></p><p class="c44"><span class="c12 c131 c64">1.2 Courses File</span></p><p class="c44"><span class="c23">The data about the courses (for the server use) are given by a text file which you will define beforehand. The file name </span><span class="c13">MUST</span><span class="c23">&nbsp;be </span><span class="c13">Courses.txt</span><span class="c4 c3">, and it should be located in the main folder (the project folder). The file consists of lines, where every line refers to a specific course. The format of a single line will be as follows:</span></p><p class="c44"><span class="c12 c0">courseNum|courseName|KdamCoursesList|numOfMaxStudents</span></p><p class="c44"><span class="c13">courseNum:</span><span class="c4 c3">&nbsp;the number of the course (100&gt;= int &gt;= 0)</span></p><p class="c44"><span class="c13">courseName</span><span class="c4 c3">: the course name (non-empty string)</span></p><p class="c44"><span class="c13">KdamCoursesList</span><span class="c23">: the list of the Kdam courses. (format:</span><span class="c13">&nbsp;[course1Num, course2Num,...]</span><span class="c4 c3">)</span></p><p class="c44"><span class="c13">numOfMaxStudents: </span><span class="c4 c3">the maximum number of students allowed to register to this course(int &gt;= 5)</span></p><p class="c44"><span class="c23">No spaces before and after the </span><span class="c13">‘|’</span><span class="c4 c3">&nbsp;character - you don’t need to check that.</span></p><p class="c44"><span class="c23">The course name doesn’t contain the </span><span class="c13">‘|’</span><span class="c4 c3">&nbsp;character - you also don’t need to check that.</span></p><p class="c44"><span class="c4 c3">You can assume that the courses file is formatted well (means, all courses lines are written in the correct format), so no need to check that.</span></p><p class="c44"><span class="c4 c3">Example:</span></p><p class="c44"><span class="c12 c0">42|How to Train Your Dragon|[43,2,32,39]|25</span></p><p class="c44 c17"><span class="c4 c3"></span></p><p class="c44 c17"><span class="c4 c3"></span></p><p class="c21 c17"><span class="c2"></span></p><p class="c21 c17"><span class="c2"></span></p><p class="c21 c17"><span class="c2"></span></p><p class="c21 c17"><span class="c2"></span></p><p class="c21 c17"><span class="c2"></span></p><p class="c21 c17"><span class="c2"></span></p><h2 class="c15"><span class="c12 c131 c64">1.3 Supported Commands</span></h2><p class="c71"><span class="c23">The BGRS protocol is composed of two types of commands, Server-to-Client and Client-to-Server. The commands begin with 2 bytes (short) to describe the </span><span class="c13">opcode</span><span class="c4 c3">&nbsp;. The rest of the message will be defined specifically for each command as such:</span></p><p class="c72 c17 c82"><span class="c4 c3"></span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c182 c17"><span class="c4 c61"></span></p><a id="t.4c8866fdcbeb433ae3ace7f50cf771ea39ed644d"></a><a id="t.0"></a><table class="c142"><tbody><tr class="c6"><td class="c37" colspan="1" rowspan="1"><p class="c78"><span class="c4 c3">2 bytes</span></p></td><td class="c145" colspan="1" rowspan="1"><p class="c135"><span class="c4 c3">Length defined by command</span></p></td></tr><tr class="c31"><td class="c37" colspan="1" rowspan="1"><p class="c57"><span class="c4 c3">Opcode</span></p></td><td class="c145" colspan="1" rowspan="1"><p class="c217"><span class="c4 c3">…</span></p></td></tr></tbody></table><p class="c69 c17"><span class="c4 c41"></span></p><p class="c101 c72 c205"><span class="c4 c3">We supplied functions that encode \ decode between 2 bytes and short for both java and C++ in the assignment page.</span></p><p class="c15 c17"><span class="c4 c3"></span></p><p class="c74 c72"><span class="c3">The BG</span><span class="c23">RS</span><span class="c4 c3">&nbsp;protocol supports 11 types of messages:</span></p><ul class="c24 lst-kix_list_3-2 start"><li class="c73 li-bullet-2"><span class="c23">1)</span><span class="c3">Client-to-Server messages</span></li><li class="c69 c132 li-bullet-2"><span class="c23">2)</span><span class="c3">Server-to-Client messages</span></li></ul><p class="c15 c17"><span class="c4 c3"></span></p><a id="t.a0160d3db218f044956519485a4d8b652ecfc235"></a><a id="t.1"></a><table class="c156"><tbody><tr class="c134"><td class="c10" colspan="1" rowspan="1"><p class="c39"><span class="c12 c131 c64">Opcode</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c172"><span class="c12 c131 c64">Operation</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">1</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">Admin register </span><span class="c4 c3">(ADMINREG)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">2</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">Student register</span><span class="c3">&nbsp;(</span><span class="c23">STUDENTREG</span><span class="c4 c3">)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">3</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">Login </span><span class="c3">request </span><span class="c23">(LOGIN</span><span class="c4 c3">)</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c195"><span class="c4 c3">4</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c220"><span class="c23">Logout request (LOGOUT)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">5</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">Register to course (COURSEREG)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c113"><span class="c4 c3">6</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c190"><span class="c23">Check Kdam course (KDAMCHECK)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">7</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c4 c3">(Admin)Print course status (COURSESTAT)</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c195"><span class="c4 c3">8</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">(Admin)Print student status (STUDENTSTAT)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">9</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">check if registered (ISREGISTERED)</span></p></td></tr><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c116"><span class="c4 c3">10</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c92"><span class="c23">Unregister to course (UNREGISTER)</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c199"><span class="c4 c3">11</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c34"><span class="c23">Check my current courses (MYCOURSES)</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c199"><span class="c23">12</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c34"><span class="c4 c3">Acknowledgement (ACK)</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c199"><span class="c4 c3">13</span></p></td><td class="c22" colspan="1" rowspan="1"><p class="c34"><span class="c4 c3">Error (ERR)</span></p></td></tr></tbody></table><p class="c90 c17"><span class="c4 c3"></span></p><h2 class="c194 c72"><span class="c91">ADMINREG Messages:</span></h2><p class="c48"><span class="c4 c3">Messages have the following format:</span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c21 c17"><span class="c4 c45"></span></p><a id="t.57d321e1c97be50e74fb187e496e5300477ab850"></a><a id="t.2"></a><table class="c56"><tbody><tr class="c6"><td class="c208" colspan="1" rowspan="1"><p class="c227"><span class="c4 c3">2 bytes</span></p></td><td class="c38" colspan="1" rowspan="1"><p class="c93"><span class="c4 c3">string</span></p></td><td class="c185" colspan="1" rowspan="1"><p class="c128"><span class="c4 c3">1 byte</span></p></td><td class="c138" colspan="1" rowspan="1"><p class="c62"><span class="c4 c3">string</span></p></td><td class="c112" colspan="1" rowspan="1"><p class="c121"><span class="c4 c3">1 byte</span></p></td></tr><tr class="c6"><td class="c208" colspan="1" rowspan="1"><p class="c14"><span class="c4 c3">Opcode</span></p></td><td class="c38" colspan="1" rowspan="1"><p class="c168"><span class="c4 c3">Username</span></p></td><td class="c185" colspan="1" rowspan="1"><p class="c77"><span class="c4 c3">0</span></p></td><td class="c138" colspan="1" rowspan="1"><p class="c62"><span class="c4 c3">Password</span></p></td><td class="c112" colspan="1" rowspan="1"><p class="c60"><span class="c4 c3">0</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c68"></span></p><p class="c69 c17"><span class="c4 c61"></span></p><p class="c111 c72"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c173 c72 c124"><span class="c3">A</span><span class="c23">n ADMINREG </span><span class="c3">message is used to register a</span><span class="c23">n admin </span><span class="c4 c3">in the service. If the username is already registered in the server, an ERROR message is returned. If successful an ACK message will be sent in return. Both string parameters are a sequence of bytes in UTF-8 terminated by a zero byte (also known as the ‘\0’ char).</span></p><h3 class="c48"><span>Parameters:</span></h3><p class="c81 c17"><span class="c12 c64 c102"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c15 c132 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;1.</span></li><li class="c15 c132 li-bullet-2"><span class="c26 c3">Username</span><span class="c0 c26">:</span><span class="c0">&nbsp;</span><span class="c3">The username to register in the server.</span></li><li class="c15 c132 li-bullet-2"><span class="c26 c3">Password</span><span class="c3">: The password for the current username (used to log in to the server).</span></li></ul><p class="c25 c17"><span class="c2"></span></p><h3 class="c187 c72"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 c171 li-bullet-3"><span class="c3">This command is initiated by entering the following text in the client command line interface: </span><span class="c13">ADMINREG &nbsp;</span><span class="c0">&lt;Username&gt; &lt;Password&gt;</span></li></ul><p class="c15 c17"><span class="c12 c0"></span></p><p class="c69 c17"><span class="c11"></span></p><p class="c69 c17"><span class="c11"></span></p><h2 class="c143 c72"><span class="c91">STUDENTREG Messages:</span></h2><p class="c35"><span class="c4 c3">Messages have the following format:</span></p><p class="c17 c21"><span class="c4 c45"></span></p><a id="t.57d321e1c97be50e74fb187e496e5300477ab850"></a><a id="t.3"></a><table class="c56"><tbody><tr class="c6"><td class="c208" colspan="1" rowspan="1"><p class="c227"><span class="c4 c3">2 bytes</span></p></td><td class="c38" colspan="1" rowspan="1"><p class="c93"><span class="c4 c3">string</span></p></td><td class="c185" colspan="1" rowspan="1"><p class="c128"><span class="c4 c3">1 byte</span></p></td><td class="c138" colspan="1" rowspan="1"><p class="c62"><span class="c4 c3">string</span></p></td><td class="c112" colspan="1" rowspan="1"><p class="c121"><span class="c4 c3">1 byte</span></p></td></tr><tr class="c6"><td class="c208" colspan="1" rowspan="1"><p class="c14"><span class="c4 c3">Opcode</span></p></td><td class="c38" colspan="1" rowspan="1"><p class="c168"><span class="c4 c3">Username</span></p></td><td class="c185" colspan="1" rowspan="1"><p class="c77"><span class="c4 c3">0</span></p></td><td class="c138" colspan="1" rowspan="1"><p class="c62"><span class="c4 c3">Password</span></p></td><td class="c112" colspan="1" rowspan="1"><p class="c60"><span class="c4 c3">0</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c19"></span></p><p class="c111 c72"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c72 c124 c173"><span class="c4 c3">A STUDENTREG message is used to register a student in the service. If the username is already registered in the server, an ERROR message is returned. If successful an ACK message will be sent in return. Both string parameters are a sequence of bytes in UTF-8 terminated by a zero byte (also known as the ‘\0’ char).</span></p><h3 class="c48" id="h.gjdgxs"><span>Parameters:</span></h3><p class="c81 c17"><span class="c12 c102 c64"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c15 c132 li-bullet-4"><span class="c26 c23">Opcode:</span><span class="c23">&nbsp;2.</span></li><li class="c15 c132 li-bullet-3"><span class="c26 c23">Username</span><span class="c26 c13">:</span><span class="c13">&nbsp;</span><span class="c23">The username to register in the server.</span></li><li class="c15 c132 li-bullet-5"><span class="c26 c23">Password</span><span class="c23">: The password for the current username (used to log in to the server).</span></li></ul><p class="c17 c25"><span class="c2"></span></p><h3 class="c72 c187" id="h.30j0zll"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 c171 li-bullet-3"><span class="c23">This command is initiated by entering the following text in the client command line interface: </span><span class="c13">STUDENTREG &nbsp;&lt;Username&gt; &lt;Password&gt;</span></li></ul><p class="c69 c17"><span class="c11"></span></p><p class="c69 c17"><span class="c11"></span></p><p class="c69 c17"><span class="c11"></span></p><h2 class="c72 c143"><span class="c91">LOGIN Messages:</span></h2><p class="c35"><span class="c4 c3">Messages have the following format:</span></p><p class="c21 c17"><span class="c4 c19"></span></p><a id="t.57d321e1c97be50e74fb187e496e5300477ab850"></a><a id="t.4"></a><table class="c148"><tbody><tr class="c31"><td class="c8" colspan="1" rowspan="1"><p class="c126"><span class="c4 c3">2 bytes</span></p></td><td class="c136" colspan="1" rowspan="1"><p class="c244"><span class="c4 c3">string</span></p></td><td class="c144" colspan="1" rowspan="1"><p class="c228"><span class="c4 c3">1 byte</span></p></td><td class="c136" colspan="1" rowspan="1"><p class="c206"><span class="c4 c3">string</span></p></td><td class="c144" colspan="1" rowspan="1"><p class="c241"><span class="c4 c3">1 byte</span></p></td></tr><tr class="c6"><td class="c8" colspan="1" rowspan="1"><p class="c163"><span class="c4 c3">Opcode</span></p></td><td class="c136" colspan="1" rowspan="1"><p class="c165"><span class="c4 c3">Username</span></p></td><td class="c144" colspan="1" rowspan="1"><p class="c95"><span class="c4 c3">0</span></p></td><td class="c136" colspan="1" rowspan="1"><p class="c189"><span class="c4 c3">Password</span></p></td><td class="c144" colspan="1" rowspan="1"><p class="c125"><span class="c4 c3">0</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c3"></span></p><p class="c72 c94"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c173 c72 c240"><span class="c3">A LOGIN message is used to login a user into the server. If the user doesn’t exist or the password doesn’t match the one entered for the username, sends an ERROR message. An ERROR message should also appear if the current client has already </span><span class="c23">successfully</span><span class="c4 c3">&nbsp;logged in.</span></p><p class="c173 c72"><span class="c4 c3">Both string parameters are a sequence of bytes in UTF-8 terminated by a zero byte.</span></p><p class="c15 c17"><span class="c4 c3"></span></p><p class="c5 c17"><span class="c2"></span></p><h3 class="c15 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c119 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">3</span><span class="c3">.</span></li><li class="c73 li-bullet-2"><span class="c26 c3">Username</span><span class="c0 c26">:</span><span class="c0">&nbsp;</span><span class="c3">The username to log in the server.</span></li><li class="c87 li-bullet-2"><span class="c26 c3">Password</span><span class="c3">: The password for the current username (used to log in to the server)</span></li></ul><p class="c108"><span class="c36 c3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; </span></p><h3 class="c151"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-3"><span class="c3">This command is initiated by entering the following text in the client command line interface: </span><span class="c0">LOGIN &lt;Username&gt; &lt;Password&gt;</span></li></ul><p class="c15 c17"><span class="c12 c0"></span></p><p class="c69 c17"><span class="c12 c45 c64"></span></p><h2 class="c143 c72"><span class="c91">LOGOUT Messages:</span></h2><p class="c35"><span class="c4 c3">Messages have the following format:</span></p><p class="c25 c17"><span class="c2"></span></p><a id="t.ff8177a84293e656e4051cd6da2850ed3dd23c91"></a><a id="t.5"></a><table class="c130"><tbody><tr class="c6"><td class="c8" colspan="1" rowspan="1"><p class="c27"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c6"><td class="c8" colspan="1" rowspan="1"><p class="c192"><span class="c4 c3">Opcode</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c3"></span></p><p class="c18"><span class="c3">Messages that appear only in a Client-to-Server communication. Informs the server on client disconnection. Client may terminate only after </span><span class="c23">receiving an ACK</span><span class="c4 c3">&nbsp;message in replay. If no user is logged in, sends an ERROR message.</span></p><p class="c21 c17"><span class="c4 c162"></span></p><h3 class="c15 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">4</span><span class="c3">.</span></li></ul><p class="c21 c17"><span class="c2"></span></p><h3 class="c101 c72"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-5"><span class="c3">This command is initiated by entering the following text in the client command line interface: </span><span class="c0">LOGOUT</span></li><li class="c132 c203 li-bullet-2"><span class="c3">Once the </span><span class="c0">ACK </span><span class="c3">command is received in the client, it must terminate itself.</span></li></ul><p class="c81 c17"><span class="c4 c216"></span></p><p class="c117 c17 c233"><span class="c12 c32 c64"></span></p><p class="c92"><span class="c12 c64 c83">COURSEREG Messages:</span></p><p class="c72 c74"><span class="c4 c3">Messages have the following format:</span></p><p class="c74 c72 c17"><span class="c4 c3"></span></p><a id="t.26f7810fa8e1fff9be12d627b64f0817be825c08"></a><a id="t.6"></a><table class="c72 c212"><tbody><tr class="c54"><td class="c89" colspan="1" rowspan="1"><p class="c15"><span class="c4 c3">2 bytes</span></p></td><td class="c88" colspan="1" rowspan="1"><p class="c15"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c54"><td class="c89" colspan="1" rowspan="1"><p class="c15"><span class="c4 c3">Opcode</span></p></td><td class="c88" colspan="1" rowspan="1"><p class="c15"><span class="c4 c3">Course Number</span></p></td></tr></tbody></table><p class="c74 c72 c17"><span class="c4 c3"></span></p><p class="c18"><span class="c4 c3">Messages that appear only in a Client-to-Server communication. Inform the server about the course the student want to register to, if the registration done successfully, an ACK message will be sent back to the client, otherwise, (e.g. no such course is exist, no seats are available in this course, the student does not have all the Kdam courses, the student is not logged in) ERR message will be sent back. (Note: the admin can’t register to courses, in case the admin sends a COURSEREG message, and ERR message will be sent back to the client).</span></p><p class="c18"><span class="c0 c26 c63">Parameters</span></p><p class="c18 c180"><span class="c26 c23">Opcode:</span><span class="c4 c3">&nbsp;5</span></p><p class="c15 c52"><span class="c26 c23">Course Number:</span><span class="c4 c3">&nbsp;the number of the course the student wants to register to.</span></p><h3 class="c151" id="h.1fob9te"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-5"><span class="c23">This command is initiated by entering the following text in the client command line interface: </span><span class="c13">COURSEREG &lt;CourseNum&gt;</span><span class="c23">&nbsp;</span></li></ul><p class="c21 c17"><span class="c12 c102 c64"></span></p><h2 class="c72 c133"><span class="c91">KDAMCHECK Messages:</span></h2><p class="c74 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c21 c17"><span class="c4 c45"></span></p><a id="t.26f7810fa8e1fff9be12d627b64f0817be825c08"></a><a id="t.7"></a><table class="c184"><tbody><tr class="c6"><td class="c8" colspan="1" rowspan="1"><p class="c202"><span class="c4 c3">2 bytes</span></p></td><td class="c153" colspan="1" rowspan="1"><p class="c218"><span class="c23">2 bytes</span></p></td></tr><tr class="c31"><td class="c8" colspan="1" rowspan="1"><p class="c207"><span class="c4 c3">Opcode</span></p></td><td class="c153" colspan="1" rowspan="1"><p class="c198"><span class="c23">Course Number</span></p></td></tr></tbody></table><p class="c81 c17"><span class="c4 c53"></span></p><p class="c101 c72 c124"><span class="c3">Messages that appear only in a Client-to-Server communication.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class="c101 c72 c124"><span class="c4 c3">KDAMCHECK this message checks what are the KDAM courses of the specified course. </span></p><p class="c101 c72 c124"><span class="c4 c3">If student registered to a course successfully, we consider him having this course as KDAM &nbsp;</span></p><h3 class="c48"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">6</span><span class="c3">.</span></li><li class="c132 c171 c196 li-bullet-6"><span class="c26 c23">Course Number</span><span class="c26 c3">:</span><span class="c3">&nbsp;</span><span class="c23">the number of the course the user needs to know its KDAM courses</span></li></ul><p class="c196 c141 c171"><span class="c4 c3">When the server gets the message it returns the list of the KDAM courses, in the SAME ORDER as in the courses file (if there are now KDAM courses it returns empty string).</span></p><p class="c15 c17"><span class="c4 c3"></span></p><p class="c17 c69"><span class="c4 c3"></span></p><h3 class="c15 c72"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c173 c132 c171 li-bullet-5"><span class="c3">This command is initiated by entering the following texts in the client command line interface:</span></li></ul><p class="c70"><span class="c12 c0">KDAMCHECK &lt;CourseNumber&gt;</span></p><p class="c70 c17"><span class="c12 c0"></span></p><p class="c17 c70"><span class="c12 c0"></span></p><h2 class="c48"><span class="c91">COURSESTAT Messages:</span></h2><p class="c69 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c5"><span class="c4 c45">&nbsp; (Admin Message)</span></p><p class="c5 c17"><span class="c4 c45"></span></p><a id="t.26f7810fa8e1fff9be12d627b64f0817be825c08"></a><a id="t.8"></a><table class="c118"><tbody><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c79"><span class="c4 c3">2 bytes</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c46"><span class="c23">2 bytes</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c66"><span class="c4 c3">Opcode</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c58"><span class="c23">Course Number</span></p></td></tr></tbody></table><p class="c17 c81"><span class="c4 c53"></span></p><p class="c114 c72"><span class="c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c114 c72"><span class="c4 c3">The admin sends this message to the server to get the state of a specific course.</span></p><p class="c114 c72"><span class="c4 c3">the client should prints the state of the course as followed:</span></p><p class="c114 c72"><span class="c13">Course:</span><span class="c4 c3">&nbsp;(&lt;courseNum&gt;) &lt;courseName&gt;</span></p><p class="c114 c72"><span class="c13">Seats Available:</span><span class="c4 c3">&nbsp;&lt;numOfSeatsAvailable&gt; / &lt;maxNumOfSeats&gt; </span></p><p class="c72 c114"><span class="c13">Students Registered:</span><span class="c4 c3">&nbsp;&lt;listOfStudents&gt; //ordered alphabetically</span></p><p class="c114 c72"><span class="c4 c3">Example:</span></p><p class="c114 c72"><span class="c4 c3">Course: (42) How To Train Your Dragon</span></p><p class="c114 c72"><span class="c4 c3">Seats Available: 22/25</span></p><p class="c114 c72"><span class="c4 c3">Students Registered: [ahufferson, hhhaddock, thevast] //if there are no students registered yet, simply print []</span></p><h3 class="c15"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c132 c234 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">7</span></li></ul><p class="c107"><span class="c26 c23">Course Number: </span><span class="c23">the number of the course we want the state of.</span></p><p class="c81 c17"><span class="c4 c45"></span></p><h3 class="c69 c72"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 c171 li-bullet-5"><span class="c3">This command is initiated by entering the following texts in the client command line interface:</span></li></ul><p class="c70"><span class="c12 c0">COURSESTAT &lt;courseNum&gt;</span></p><p class="c15 c17"><span class="c12 c0"></span></p><p class="c21 c17"><span class="c12 c45 c64"></span></p><h2 class="c133 c72"><span class="c12 c83 c64">STUDENTSTAT Messages:</span></h2><p class="c15"><span class="c4 c32">&nbsp; (Admin Message)</span></p><p class="c72 c100"><span class="c4 c3">Messages have the following format:</span></p><p class="c17 c178"><span class="c4 c45"></span></p><p class="c5 c17"><span class="c4 c45"></span></p><a id="t.1be2c542b9ee019bbe73cefde3ce7785ee2ec70e"></a><a id="t.9"></a><table class="c118"><tbody><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c79"><span class="c4 c3">2 bytes</span></p></td><td class="c80" colspan="1" rowspan="1"><p class="c46"><span class="c4 c3">String</span></p></td><td class="c80" colspan="1" rowspan="1"><p class="c46"><span class="c4 c3">1 byte</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c66"><span class="c4 c3">Opcode</span></p></td><td class="c80" colspan="1" rowspan="1"><p class="c58"><span class="c4 c3">Student Username</span></p></td><td class="c80" colspan="1" rowspan="1"><p class="c58"><span class="c4 c3">0</span></p></td></tr></tbody></table><p class="c81 c17"><span class="c4 c53"></span></p><p class="c103 c72"><span class="c4 c3">&nbsp;Messages that appear only in a Client-to-Server </span></p><p class="c103 c72"><span class="c3">A </span><span class="c23">STUDENTSTAT </span><span class="c3">message is used to </span><span class="c23">receive</span><span class="c3">&nbsp;</span><span class="c23">a status about a specific student</span><span class="c3">.</span></p><p class="c114 c72"><span class="c4 c3">the client should print the state of the course as followed:</span></p><p class="c103 c72"><span class="c13">Student:</span><span class="c4 c3">&nbsp;&lt;studentUsername&gt;</span></p><p class="c103 c72"><span class="c13">Courses:</span><span class="c4 c3">&nbsp;&lt;listOfCoursesNumbersStudentRegisteredTo&gt; //ordered in the same order as in the courses file</span></p><p class="c72 c103"><span class="c26 c13">Example:</span></p><p class="c103 c72"><span class="c4 c3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Student: hhhaddock</span></p><p class="c103 c72"><span class="c4 c3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Courses: [42] // if the student hasn’t registered to any course yet, simply print []</span></p><p class="c25 c17"><span class="c4 c162"></span></p><h3 class="c69 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">8</span><span class="c3">.</span></li></ul><p class="c21 c17"><span class="c2"></span></p><h3 class="c72 c101"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-3"><span class="c3">This command is initiated by entering the following texts in the client command line interface: </span><span class="c13">STUDENTSTAT &lt;StudentUsername&gt;</span></li></ul><p class="c17 c115"><span class="c12 c0"></span></p><h2 class="c117 c146"><span class="c12 c83 c64"></span></h2><h2 class="c117 c72 c146"><span class="c12 c83 c64"></span></h2><h2 class="c117 c72"><span class="c91">ISREGISTERED Messages:</span></h2><p class="c25 c17"><span class="c12 c45 c64"></span></p><p class="c15 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c5 c17"><span class="c4 c45"></span></p><a id="t.26f7810fa8e1fff9be12d627b64f0817be825c08"></a><a id="t.10"></a><table class="c118"><tbody><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c79"><span class="c4 c3">2 bytes</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c46"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c66"><span class="c4 c3">Opcode</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c58"><span class="c4 c3">Course Number</span></p></td></tr></tbody></table><p class="c81 c17"><span class="c4 c131"></span></p><p class="c30"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c30"><span class="c4 c3">An ISREGISTERED message is used to know if the student is registered to the specified course.</span></p><p class="c30"><span class="c4 c3">The server send back “REGISTERED” if the student is already registered to the course,</span></p><p class="c30"><span class="c4 c3">otherwise, it sends back “NOT REGISTERED”.</span></p><p class="c30 c17"><span class="c4 c3"></span></p><p class="c30 c17"><span class="c4 c3"></span></p><h3 class="c69 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;</span><span class="c23">9</span><span class="c3">.</span></li><li class="c69 c132 li-bullet-2"><span class="c26 c23">Course Number</span><span class="c0 c26">:</span><span class="c0">&nbsp;</span><span class="c23">The number of the course the student wants to check. </span></li></ul><h3 class="c150 c72"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-6"><span class="c3">This command is initiated by entering the following texts in the client command line interface: </span><span class="c13">ISREGISTERED </span><span class="c0">&lt;</span><span class="c13">courseNum</span><span class="c0">&gt;</span></li></ul><p class="c15 c17"><span class="c12 c0"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><h2 class="c72 c117"><span class="c91">UNREGISTER Messages:</span></h2><p class="c25 c17"><span class="c12 c45 c64"></span></p><p class="c15 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c5 c17"><span class="c4 c45"></span></p><a id="t.26f7810fa8e1fff9be12d627b64f0817be825c08"></a><a id="t.11"></a><table class="c118"><tbody><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c79"><span class="c4 c3">2 bytes</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c46"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c66"><span class="c4 c3">Opcode</span></p></td><td class="c200" colspan="1" rowspan="1"><p class="c58"><span class="c4 c3">Course Number</span></p></td></tr></tbody></table><p class="c81 c17"><span class="c4 c131"></span></p><p class="c30"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c30"><span class="c4 c3">An UNREGISTER message is used to unregister to a specific course</span></p><p class="c30"><span class="c4 c3">The server sends back an ACK message if the registration process successfully done, otherwise, it sends back an ERR message.</span></p><p class="c30 c17"><span class="c4 c3"></span></p><p class="c17 c30"><span class="c4 c3"></span></p><h3 class="c69 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c23">Opcode:</span><span class="c23">&nbsp;10.</span></li><li class="c69 c132 li-bullet-2"><span class="c26 c23">Course Number</span><span class="c26 c13">:</span><span class="c13">&nbsp;</span><span class="c23">The number of the course the student wants to unregister to. </span></li></ul><h3 class="c72 c150" id="h.3znysh7"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-5"><span class="c23">This command is initiated by entering the following texts in the client command line interface: </span><span class="c13">UNREGISTER &lt;courseNum&gt;</span></li></ul><p class="c115 c141 c17"><span class="c85 c0"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><h2 class="c117"><span class="c91">MYCOURSES Messages:</span></h2><p class="c25 c17"><span class="c12 c45 c64"></span></p><p class="c15 c72"><span class="c4 c3">Messages have the following format:</span></p><a id="t.ff8177a84293e656e4051cd6da2850ed3dd23c91"></a><a id="t.12"></a><table class="c118"><tbody><tr class="c6"><td class="c10" colspan="1" rowspan="1"><p class="c79"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c31"><td class="c10" colspan="1" rowspan="1"><p class="c66"><span class="c4 c3">Opcode</span></p></td></tr></tbody></table><p class="c81 c17"><span class="c4 c131"></span></p><p class="c30"><span class="c4 c3">Messages that appear only in a Client-to-Server communication.</span></p><p class="c30"><span class="c4 c3">A MYCOURSES message is used to know the courses the student has registered to.</span></p><p class="c30"><span class="c23">The server sends back a list of the courses number(in the format:</span><span class="c13">[&lt;coursenum1&gt;,&lt;coursenum2&gt;]</span><span class="c23">) that the student has registered to (could be empty </span><span class="c13">[]</span><span class="c4 c3">).</span></p><p class="c30 c17"><span class="c4 c3"></span></p><p class="c30 c17"><span class="c4 c3"></span></p><h3 class="c69 c72"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c23">Opcode:</span><span class="c23">&nbsp;11.</span></li></ul><p class="c69 c17 c141"><span class="c36 c3"></span></p><h3 class="c150 c72" id="h.2et92p0"><span>Command initiation:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c49 li-bullet-3"><span class="c23">This command is initiated by entering the following texts in the client command line interface: </span><span class="c13">MYCOURSES </span></li></ul><ul class="c24 lst-kix_list_3-1"><li class="c115 c17 c154 li-bullet-7"><span class="c12 c0"></span></li></ul><h2 class="c166 c72"><span class="c91">ACK Messages:</span></h2><p class="c25 c17"><span class="c12 c45 c64"></span></p><p class="c15 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c17 c183"><span class="c4 c45"></span></p><a id="t.c9a2999a16d4051f9b66499777ed8ca55e2d03c8"></a><a id="t.13"></a><table class="c159"><tbody><tr class="c6"><td class="c50" colspan="1" rowspan="1"><p class="c237"><span class="c4 c3">2 bytes</span></p></td><td class="c47" colspan="1" rowspan="1"><p class="c122"><span class="c4 c3">2 bytes</span></p></td><td class="c213" colspan="1" rowspan="1"><p class="c149"><span class="c4 c3">-</span></p></td><td class="c76" colspan="1" rowspan="1"><p class="c149"><span class="c4 c3">1 byte</span></p></td></tr><tr class="c31"><td class="c50" colspan="1" rowspan="1"><p class="c224"><span class="c4 c3">Opcode</span></p></td><td class="c47" colspan="1" rowspan="1"><p class="c96"><span class="c4 c3">Message Opcode</span></p></td><td class="c213" colspan="1" rowspan="1"><p class="c42"><span class="c4 c3">String to be printed at the client side (as bytes)</span></p></td><td class="c76" colspan="1" rowspan="1"><p class="c42"><span class="c4 c3">0</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c68"></span></p><p class="c15 c17"><span class="c4 c45"></span></p><p class="c21 c17"><span class="c4 c61"></span></p><p class="c69 c72"><span class="c4 c3">Messages that appear only in a Server-to-Client communication.</span></p><p class="c72 c140"><span class="c4 c3">ACK Messages are used to acknowledge different Messages. Each ACK contains the message number for which the ack was sent. In the optional section there will be additional data for some of the Messages (if a message uses the optional section it will be specified under the message description).</span></p><p class="c72 c129"><span class="c4 c3">All Messages that appear in a Client-to-Server communication require an ack/error message in response.</span></p><h3 class="c29"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c26 c3">Opcode:</span><span class="c3">&nbsp;1</span><span class="c23">2</span><span class="c3">.</span></li><li class="c132 c197 li-bullet-2"><span class="c26 c3">Message Opcode</span><span class="c3">: The message opcode the ACK was sent for.</span></li><li class="c73 li-bullet-2"><span class="c26 c3">Optional:</span><span class="c3">&nbsp;changes for each message.</span></li></ul><p class="c15 c17"><span class="c4 c68"></span></p><p class="c25 c17"><span class="c4 c41"></span></p><h3 class="c72 c191"><span class="c63 c0 c26">Client screen output:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c132 c158 li-bullet-2"><span class="c3">Any ACK message received in </span><span class="c0">client </span><span class="c23">should</span><span class="c3">&nbsp;be written to the screen in</span><span class="c23">&nbsp;the following manner</span><span class="c3">:</span></li></ul><h3 class="c139 c223"><span class="c12 c0">ACK &lt;Message Opcode&gt;</span></h3><h3 class="c139 c223"><span class="c0 c12">&lt;Optional&gt;</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c166 c132 li-bullet-2"><span class="c3">Printing of the optional part</span><span class="c23">: split between optional parameters by space.</span></li></ul><h2 class="c72 c242"><span class="c91">ERROR Messages:</span></h2><p class="c25 c17"><span class="c12 c45 c64"></span></p><p class="c15 c72"><span class="c4 c3">Messages have the following format:</span></p><p class="c15 c17"><span class="c4 c3"></span></p><a id="t.64a26b992bc9f2a87d4ee1dde3d961f9848c819b"></a><a id="t.14"></a><table class="c204"><tbody><tr class="c31"><td class="c8" colspan="1" rowspan="1"><p class="c188"><span class="c4 c3">2 bytes</span></p></td><td class="c221" colspan="1" rowspan="1"><p class="c179"><span class="c4 c3">2 bytes</span></p></td></tr><tr class="c6"><td class="c8" colspan="1" rowspan="1"><p class="c225"><span class="c4 c3">Opcode</span></p></td><td class="c221" colspan="1" rowspan="1"><p class="c122"><span class="c4 c3">Message Opcode</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c3"></span></p><p class="c72 c139"><span class="c4 c3">Messages that appear only in a Server-to-Client communication.</span></p><p class="c72 c175"><span class="c4 c3">An ERROR message may be the acknowledgment of any other type of message. In case of error, an error message should be sent.</span></p><h3 class="c29"><span>Parameters:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c119 li-bullet-2"><span class="c3 c26">Opcode:</span><span class="c3">&nbsp;1</span><span class="c23">3</span><span class="c3">.</span></li><li class="c73 li-bullet-2"><span class="c26 c3">Message Opcode</span><span class="c3">: The message opcode the ERROR was sent for.</span></li></ul><p class="c15 c17"><span class="c4 c68"></span></p><p class="c21 c17"><span class="c4 c41"></span></p><h3 class="c72 c186"><span>Error Notification:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c73 li-bullet-2"><span class="c3">Any error message received in </span><span class="c0">client </span><span class="c3">should be written to screen:</span></li></ul><p class="c69 c141"><span class="c13 c104">ERROR</span><span class="c12 c0">&nbsp;&lt;Message Opcode&gt;</span></p><p class="c69 c141 c17"><span class="c12 c0"></span></p><p class="c90"><span class="c104 c23">In any case, if the message cannot be processed successfully, or the user is not allowed to send this message (e.g. student sends an admin message), the server returns an ERROR message.</span></p><ul class="c24 lst-kix_list_3-0"><li class="c137 li-bullet-8"><h1 style="display:inline"><span class="c11">Implementation Details</span></h1></li></ul><ul class="c24 lst-kix_list_3-1 start"><li class="c99 li-bullet-7"><h2 style="display:inline"><span class="c12 c131 c64">General Guidelines</span></h2></li></ul><ul class="c24 lst-kix_list_3-2 start"><li class="c132 c171 c222 li-bullet-5"><span class="c3">The server should be written in Java. The client should be written in C++ with BOOST. Both should be tested on Linux installed at CS computer labs or the provided VM.</span></li></ul><p class="c17 c182"><span class="c2"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c111 c132 c171 li-bullet-5"><span class="c3">You must use maven as your build tool for the server and MakeFile for the c++ client.</span></li></ul><p class="c81 c17"><span class="c2"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c111 c132 c171 li-bullet-5"><span class="c3">The same coding standards expected in the course and previous assignments are expected here.</span></li></ul><p class="c25 c17"><span class="c2"></span></p><ul class="c24 lst-kix_list_3-1"><li class="c15 c154 li-bullet-1"><h2 style="display:inline"><span class="c12 c131 c64">Server</span></h2></li></ul><p class="c72 c231"><span class="c3">You will have to implement a single protocol, supporting both the </span><span class="c0">Thread-Per-Client </span><span class="c3">and </span><span class="c0 c59">Reactor </span><span class="c3">server patterns presented in class. Code seen in class for both servers is included in the assignment wiki page. You are also provided with </span><span class="c23">a</span><span class="c3">&nbsp;new c</span><span class="c23">lass</span><span class="c4 c3">:</span></p><p class="c81 c17"><span class="c2"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c9 li-bullet-3"><span class="c13">Database</span><span class="c0">&nbsp;</span><span class="c3">– This i</span><span class="c23">s a singleton class that should be used in order to manage the Courses and Users. You must only use this class in order to do that. Notice that this class should be thread-safe.</span></li><li class="c9 c17 li-bullet-5"><span class="c4 c3"></span></li></ul><ul class="c24 lst-kix_list_3-3 start"><li class="c16 li-bullet-3"><span class="c0">boolean </span><span class="c13">initialize</span><span class="c0">(</span><span class="c13">String</span><span class="c0">&nbsp;</span><span class="c13">coursesFilePath</span><span class="c0">) </span><span class="c3">– </span><span class="c23">loades the courses from the file path specified into the Database, returns true if successful.</span></li><li class="c16 li-bullet-3"><span class="c13">public static Database getInstance() </span><span class="c23">– Retrieves the single instance of this class.</span></li><li class="c16 li-bullet-5"><span class="c23">(example - not required) </span><span class="c13">String getUserPassword(String UserName) </span><span class="c4 c3">– returns the password of the username</span></li></ul><p class="c15"><span class="c4 c3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class="c15 c17"><span class="c4 c68"></span></p><p class="c5 c17"><span class="c4 c61"></span></p><p class="c69 c72"><span class="c4 c3">Left to you, are the following tasks:</span></p><p class="c81 c17"><span class="c2"></span></p><ol class="c24 lst-kix_list_2-0 start" start="1"><li class="c9 li-bullet-4"><span class="c23">Finish the</span><span class="c3">&nbsp;</span><span class="c59 c23">Database</span><span class="c0 c59">&nbsp;</span><span class="c23">class.</span></li><li class="c28 li-bullet-4"><span class="c23">Implement the </span><span class="c23 c59">MessagingProtocol </span><span class="c23">and </span><span class="c59 c23">MessageEncoderDecoder </span><span class="c23">to support the BGRS protocol as described in section 1.2. </span><span class="c13">&nbsp;The implementations MUST not be specific for the protocol implementation. </span><span class="c23">You will also need to define messages(&lt;T&gt; in the interfaces). You may add more classes as necessary to implement the protocol (shared protocol data ect…).</span></li></ol><p class="c81 c17"><span class="c2"></span></p><h3 class="c69 c72"><span>Leading questions:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 c98 li-bullet-3"><span class="c3">Which classes and interfaces are part of the Server pattern and which are part of the Protocol implementation?</span></li><li class="c73 li-bullet-2"><span class="c3">When and how do I register a new </span><span class="c23">user in the </span><span class="c13">Database</span><span class="c23">&nbsp;class.</span></li><li class="c73 li-bullet-2"><span class="c23">Which class(es) use the </span><span class="c13">Database</span><span class="c23">&nbsp;class, apart from the </span><span class="c13">initialize</span><span class="c4 c3">? </span></li><li class="c28 li-bullet-5"><span class="c3">When do I call</span><span class="c23">&nbsp;</span><span class="c13">initialize</span><span class="c0">&nbsp;</span><span class="c3">to initiate the </span><span class="c13">Database</span><span class="c3">?</span></li></ul><h3 class="c72 c75"><span>Tip:</span></h3><p class="c81 c17"><span class="c12 c102 c64"></span></p><ul class="c24 lst-kix_list_3-2"><li class="c132 c98 c174 li-bullet-5"><span class="c3">You can test tasks 1 by fixing one of the examples in the impl folder in the supplied spl-net.zip to work with </span><span class="c23">your implementations</span><span class="c3">&nbsp;(easiest is the echo example)</span></li></ul><p class="c17 c109"><span class="c4 c3"></span></p><p class="c81 c17"><span class="c2"></span></p><h3 class="c15 c72"><span>Testing run commands:</span></h3><ul class="c24 lst-kix_list_3-2"><li class="c1 li-bullet-2"><span class="c3">Reactor server</span><span class="c0">:</span></li></ul><h3 class="c141 c226"><span class="c170 c0">mvn exec:java -Dexec.mainClass=”bgu.spl.net.impl.BGRSServer.ReactorMain” -</span></h3><p class="c141 c147"><span class="c170 c0">Dexec.args=”&lt;port&gt; &lt;No of threads&gt;”</span></p><ul class="c24 lst-kix_list_3-2"><li class="c132 c177 li-bullet-2"><span class="c3">Thread per client server</span><span class="c0">:</span></li></ul><h3 class="c141 c243"><span class="c170 c0">mvn exec:java -Dexec.mainClass=”bgu.spl.net.impl.BGRSServer.TPCMain” -</span></h3><p class="c141 c194"><span class="c0 c170">Dexec.args=”&lt;port&gt;”</span></p><p class="c72 c105"><span class="c3">The </span><span class="c0">server </span><span class="c3">directory should contain a </span><span class="c0">pom.xml </span><span class="c3">file and the </span><span class="c0">src </span><span class="c4 c3">directory. Compilation will be done from the server folder using:</span></p><p class="c69 c72"><span class="c12 c0">mvn compile</span></p><ul class="c24 lst-kix_list_3-1"><li class="c154 c166 li-bullet-1"><h2 style="display:inline"><span class="c12 c131 c64">Client</span></h2></li></ul><p class="c72 c124 c239"><span class="c3">An echo client is provided, but its a single threaded client. While it is blocking on stdin (read from keyboard) it does not read messages from the socket. You should improve the client so that it will run 2 threads. One should read </span><span class="c23">from the keyboard</span><span class="c3">&nbsp;while the other should read from socket. The client should receive the server’s IP and PORT as arguments. You may assume a network disconnection does not happen (like disconnecting the network cable). You may also assume </span><span class="c23">legal</span><span class="c4 c3">&nbsp;input via keyboard.</span></p><p class="c81 c17"><span class="c2"></span></p><p class="c7"><span class="c3">The client should </span><span class="c23">receive</span><span class="c4 c3">&nbsp;commands using the standard input. Commands are defined in section 1.2 under command initiation sub sections. You will need to translate from keyboard command to network messages and the other way around to fit the specifications.</span></p><p class="c81 c17"><span class="c2"></span></p><p class="c33"><span class="c3">Notice that the client should close itself upon reception of an </span><span class="c0">ACK </span><span class="c3">message in response </span><span class="c23">to an</span><span class="c3">&nbsp;outgoing </span><span class="c0">LOGOUT </span><span class="c4 c3">command.</span></p><p class="c21 c17"><span class="c2"></span></p><p class="c7"><span class="c3">The </span><span class="c0">Client </span><span class="c3">directory should contain a src, include and bin subdirectories and a Makefile as shown in class. The output executable for the client is named </span><span class="c13">BGRS</span><span class="c0">client </span><span class="c3">and should reside in the bin folder after calling </span><span class="c0">make</span><span class="c4 c3">.</span></p><p class="c5 c17"><span class="c2"></span></p><p class="c72 c111"><span class="c26 c13">Testing run commands:</span><span class="c12 c0">&nbsp;BGRSclient &lt;ip&gt; &lt;port&gt;</span></p><p class="c5 c17"><span class="c12 c102 c64"></span></p><ul class="c24 lst-kix_list_3-0"><li class="c15 c176 li-bullet-0"><h1 style="display:inline"><span class="c11">Submission instruction</span></h1></li></ul><ul class="c24 lst-kix_list_1-0 start"><li class="c84 li-bullet-3"><span class="c4 c3">Submission is done only in pairs. If you do not have a pair, find one. You need explicit authorization from the course staff to submit without a pair. You cannot submit in a group larger than two.</span></li><li class="c127 li-bullet-5"><span class="c4 c3">You must submit one .tar.gz file with all your code. The file should be named "ID#1_ID#2.tar.gz". Note: We require you to use a .tar.gz file. Files such as .rar,</span></li></ul><p class="c120"><span class="c4 c3">.zip, .bz, or anything else which is not a .tar.gz file will not be accepted and your grade will suffer.</span></p><ul class="c24 lst-kix_list_1-0"><li class="c117 c132 c124 li-bullet-3"><span class="c4 c3">Extension requests are to be sent to Dolav. Your request email must include the following information:</span></li></ul><ul class="c24 lst-kix_list_1-1 start"><li class="c169 c215 li-bullet-3"><span class="c4 c3">Your name and your partners name.</span></li><li class="c15 c169 c235 li-bullet-6"><span class="c4 c3">Your id and your partners id.</span></li><li class="c15 c235 c169 li-bullet-3"><span class="c4 c3">Explanation regarding the reason of the extension request.</span></li><li class="c65"><span class="c23">Official</span><span class="c4 c3">&nbsp;certification for your illness or army drafting. Requests without a compelling reason will not be accepted</span></li></ul><ul class="c24 lst-kix_list_1-0"><li class="c132 c124 c209 li-bullet-4"><span class="c3">The submitted file should contain a </span><span class="c0">Client </span><span class="c3">directory and a </span><span class="c0">Server </span><span class="c4 c3">directory (Their content was explained in the implementation section).</span><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 587.61px; height: 283.25px;"><img alt="" src="./assignment3_files/image1.jpg" style="width: 587.61px; height: 283.25px; margin-left: -0.00px; margin-top: -0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></li></ul><ul class="c24 lst-kix_list_3-0"><li class="c194 c176 li-bullet-9"><h1 style="display:inline"><span class="c11">Examples</span></h1></li></ul><p class="c72 c205 c210"><span class="c3">The following section contains examples of commands running on </span><span class="c23">clients</span><span class="c4 c3">. It assumes that the software opened a socket properly and a connection has been initiated.</span></p><p class="c15 c72 c211"><span class="c3">We use “CLIENT#No&lt;” and “CLIENT#No&gt;” to annotate client #No terminal input (keyboard) \ output (screen print). The order of commands </span><span class="c23">matches the order</span><span class="c3">&nbsp;of reception </span><span class="c23">on the server</span><span class="c4 c3">. Server and client actions are explained in between.</span></p><p class="c15 c72 c205"><span class="c4 c3">Note that the examples do not show the actual structure of the network messages, just the input \ output on the client terminal. The translation should be done according to specifications in section 1.2.</span></p><p class="c25 c17"><span class="c4 c45"></span></p><ul class="c24 lst-kix_list_3-1"><li class="c15 c219 li-bullet-7"><h2 style="display:inline"><span class="c12 c131 c64">Registration and login</span></h2></li></ul><p class="c72 c236"><span class="c4 c3">Server assumptions for example:</span></p><ul class="c24 lst-kix_list_3-2"><li class="c73 li-bullet-2"><span class="c3">Server currently has 1 registered user named “Morty” with password “a123</span><span class="c23">”</span><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 636.34px; height: 446.16px;"><img alt="" src="./assignment3_files/assignment3.docx.png" style="width: 636.34px; height: 446.16px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></li></ul><ul class="c24 lst-kix_list_3-1"><li class="c155 li-bullet-10"><h2 style="display:inline"><span class="c12 c131 c64">Kdam and Unregistering from courses</span></h2></li></ul><p class="c152 c72"><span class="c4 c3">Server assumptions for example:</span></p><ul class="c24 lst-kix_list_3-2"><li class="c132 c152 li-bullet-4"><span class="c4 c3">No users are registered (via STUDENTREG).</span></li><li class="c132 c160 li-bullet-2"><span class="c23">Courses file</span><span class="c3">:</span></li></ul><p class="c160 c169"><span class="c4 c3">82|Swordsmanship for Heros|[30,12]|2</span></p><p class="c160 c169"><span class="c4 c3">35|Swordsmanship: From Hero to King|[82,30,12]|1</span></p><p class="c160 c169"><span class="c4 c3">12|Advance Swordsmanship|[30]|5</span></p><p class="c160 c169"><span class="c4 c3">30|Intermediate Swordsmanship|[]|25</span></p><p class="c160 c17"><span class="c4 c3"></span></p><p class="c160 c17"><span class="c4 c3"></span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; STUDENTREG Zoro roronoaZ</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 2</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; LOGIN Zoro roronoaZ</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 3</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; KDAMCHECK 35</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 7</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; [82,12,30]</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 35</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ERROR 5 (note that this message has sent because the student doesn't have all the Kdam courses)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; KDAMCHECK 82</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 7</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; [12,30] (be careful, we print the courses in the order they listed in the file, not as they appear in the course 482 line)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 12</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ERROR 10 (not registered to 30, which is a Kdam course for 12)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 30</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 5</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 12</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 5</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 82</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 5</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; ISREGISTERED 35</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 9</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; NOT REGISTERED</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; UNREGISTER 35</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ERROR 10 (because the student is not registered to the course yet)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; ISREGISTERED 82</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 9</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; REGISTERED</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; COURSEREG 35 (after been registered to all the Kdam courses of 35, he finally can register to 35)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 5</span></p><p class="c20"><span class="c4 c3">CLIENT#1&gt; UNREGISTER 12 (although the student has been registered to a course that 12 is a KDAM to, he can unregister himself from 12)</span></p><p class="c20"><span class="c4 c3">CLIENT#1&lt; ACK 10</span></p><p class="c20"><span class="c4 c3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><ul class="c24 lst-kix_list_3-1"><li class="c155 li-bullet-11"><h2 style="display:inline"><span class="c12 c131 c64">Keyboard command to packet</span></h2></li></ul><p class="c72 c205 c247"><span class="c3">In this section we will show a </span><span class="c0">few </span><span class="c4 c3">keyboard commands and their matching network messages. Note that since network messages are just an array of bytes, we will print the hex values of those byte array.</span></p><p class="c69 c72 c110"><span class="c0">Reminder</span><span class="c4 c3">: A byte can be represented by 2 hexadecimal values (0 to f), each representing 4 bits of the 8 in a single byte.</span></p><p class="c15 c17"><span class="c4 c3"></span></p><a id="t.575ce45634d31abafa9e17938fd35a91f6a65217"></a><a id="t.15"></a><table class="c212 c232"><tbody><tr class="c6"><td class="c246" colspan="1" rowspan="1"><p class="c92"><span class="c12 c0">Keyboard command</span></p></td><td class="c238" colspan="1" rowspan="1"><p class="c40"><span class="c12 c0">Message hex representation</span></p></td></tr><tr class="c31"><td class="c230" colspan="1" rowspan="1"><p class="c220"><span class="c23">STUDENTREG </span><span class="c4 c3">Morty a123</span></p></td><td class="c86" colspan="1" rowspan="1"><p class="c181"><span class="c3">00 0</span><span class="c23">2</span><span class="c3 c4">&nbsp;4d 6f 72 74 79 00 61 31 32 33 00</span></p></td></tr><tr class="c6"><td class="c97" colspan="1" rowspan="1"><p class="c92"><span class="c4 c3">LOGIN Morty a123</span></p></td><td class="c55" colspan="1" rowspan="1"><p class="c40"><span class="c3">00 0</span><span class="c23">3</span><span class="c4 c3">&nbsp;4d 6f 72 74 79 00 61 31 32 33 00</span></p></td></tr><tr class="c245"><td class="c97" colspan="1" rowspan="1"><p class="c92"><span class="c23">STUDENTSTAT Morty</span></p></td><td class="c55" colspan="1" rowspan="1"><p class="c201"><span class="c23">00 08 4d 6f 72 74 79 00</span></p></td></tr><tr class="c164"><td class="c97" colspan="1" rowspan="1"><p class="c92"><span class="c23">COURSESTAT 32</span></p></td><td class="c55" colspan="1" rowspan="1"><p class="c201"><span class="c23">00 07 00 20</span></p></td></tr><tr class="c6"><td class="c97" colspan="1" rowspan="1"><p class="c92"><span class="c4 c3">LOGOUT</span></p></td><td class="c55" colspan="1" rowspan="1"><p class="c40"><span class="c4 c3">00 03</span></p></td></tr></tbody></table><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17"><span class="c4 c32"></span></p><p class="c15 c17 c157"><span class="c4 c161"></span></p></div></div><script type="text/javascript" nonce="">(function(){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var aa="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
function ca(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var da=ca(this);function ea(a,b){if(b)a:{var c=da;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}var k;
if("function"==typeof Object.setPrototypeOf)k=Object.setPrototypeOf;else{var l;a:{var fa={a:!0},ha={};try{ha.__proto__=fa;l=ha.a;break a}catch(a){}l=!1}k=l?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var ia=k;
function m(a,b){a.prototype=aa(b.prototype);a.prototype.constructor=a;if(ia)ia(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.m=b.prototype}ea("Object.is",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});var n=this||self;function p(){}function q(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}
function ja(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function ka(a,b){function c(){}c.prototype=b.prototype;a.m=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.C=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}}function r(a){return a};function t(a){t[" "](a);return a}t[" "]=p;function la(a,b,c){return Object.prototype.hasOwnProperty.call(a,b)?a[b]:a[b]=c(b)};function ma(a){return la(a.prototype,"$$generatedClassName",function(){return"Class$obf_"+{valueOf:function(){return++na}}})}var na=1E3;function u(){}u.prototype.s=function(){return this.j||(Object.defineProperties(this,{j:{value:oa=oa+1|0,enumerable:!1}}),this.j)};u.prototype.toString=function(){var a=v(w(pa(this.constructor)))+"@";var b=(this.s()>>>0).toString(16);return a+v(b)};function x(){}m(x,u);x.prototype.h=function(a){this.g=a;if(a instanceof Object)try{a.v=this}catch(b){}};function qa(a){a.g instanceof Error&&(Error.captureStackTrace?Error.captureStackTrace(a.g):a.g.stack=Error().stack)}x.prototype.toString=function(){var a=w(pa(this.constructor)),b=this.l;return null==b?a:v(a)+": "+v(b)};
function ra(a){if(null!=a){var b=a.v;if(null!=b)return b}a instanceof TypeError?(b=new sa,b.l=v(a),qa(b),b.i=a,b.h(new TypeError(b)),a=b):(b=new y,b.l=v(a),qa(b),b.i=a,b.h(Error(b)),a=b);return a};function z(){}m(z,x);function A(){}m(A,z);function y(){}m(y,A);y.prototype.h=function(a){A.prototype.h.call(this,"__noinit__"===this.i?a:this.i)};function sa(){}m(sa,y);var oa=0;function ta(a,b){return"string"==typeof a?a.charCodeAt(b):a.g(b)};function B(){}var ua,va;m(B,u);function wa(){wa=function(){};va=new C;ua=new D};function C(){}m(C,B);C.prototype.toString=function(){return""};function D(){}m(D,B);D.prototype.toString=function(){return"unknown"};function v(a){return null==a?"null":a.toString()}function xa(a){return 65536<=a?v(String.fromCharCode((55296+((a-65536|0)>>10&1023)|0)&65535))+v(String.fromCharCode((56320+((a-65536|0)&1023)|0)&65535)):String.fromCharCode(a&65535)}function ya(a,b){var c=b,d=a.length,e;b=ta(a,(e=c,c=c+1|0,e));var f;if(e=55296<=b&&56319>=b&&c<d)a=f=ta(a,c),e=56320<=a&&57343>=a;var g;e?g=65536+((b&1023)<<10)+(f&1023)|0:g=b;return g};function E(a,b){this.g=a;this.h=b}m(E,u);function w(a){if(0!=a.h){var b="L"+v(ma(a.g))+";";a=a.h;for(var c="",d=0;d<a;d=d+1|0)c=v(c)+"[";return v(c)+v(b)}return ma(a.g)}E.prototype.toString=function(){return"class "+v(w(this))};function pa(a){return la(a.prototype,"$$class/0",function(){return new E(a,0)})};function za(a){var b=a;try{var c;var d=F(a)[3];if(c="www.google.com"===G(d,!0)){var e=F(a);c="/url"===G(e[5],!0)}if(c){var f=Aa(a,"q");b=f?f:Aa(a,"url")}}catch(g){if(g=ra(g),!(g instanceof z))throw g.g;}return null!=b?b:""};function G(a,b){return null==a?a:b?decodeURI(a):decodeURIComponent(a)};var Ba=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\S\s]*))?$/;function F(a){a=Ba.exec(a);for(var b=[],c=0;7>=c;c=c+1|0)a.length<=c||null==a[c]?b.push(null):b.push(a[c]);return b}
function Aa(a,b){var c=a.indexOf(xa(35));c=0>c?a.length:c;a:{var d=0;for(var e=b.length;0<(d=a.indexOf(b,d))&&d<c;){var f=ya(a,d-1|0);if(38==f||63==f){if((d+e|0)>=a.length)break a;f=ya(a,d+e|0);if(61==f||38==f||35==f)break a}d=d+(e+1)|0}d=-1}if(0>d)return null;e=a.indexOf(xa(38),d);if(0>e||e>c)e=c;d=d+(b.length+1)|0;b=Math.min(a.length,d);a=a.substr(b,Math.min(a.length,Math.max(d,e))-b|0);c=" ";for(b=0;0<=(b=c.indexOf("\\",b));)36==c.charCodeAt(b+1|0)?(d=v(c.substr(0,b|0))+"$",e=b=b+1|0,c=d+v(c.substr(e))):
(d=v(c.substr(0,b|0)),e=b=b+1|0,c=d+v(c.substr(e)));a=a.replace(/\+/g,c);return G(a,!1)};var Ca=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};var Da=/&/g,Ea=/</g,Fa=/>/g,Ga=/"/g,Ha=/'/g,Ia=/\x00/g,Ja=/[\x00&<>"']/;var H;a:{var Ka=n.navigator;if(Ka){var La=Ka.userAgent;if(La){H=La;break a}}H=""}function I(a){return-1!=H.indexOf(a)};function Ma(a,b,c){for(var d in a)b.call(c,a[d],d,a)};var J;function K(a,b){this.i=a===Na&&b||"";this.j=Oa}K.prototype.h=!0;K.prototype.g=function(){return this.i};var Oa={},Na={};function L(a,b){this.i=b===M?a:""}L.prototype.h=!0;L.prototype.g=function(){return this.i.toString()};L.prototype.toString=function(){return this.i.toString()};function N(a){return a instanceof L&&a.constructor===L?a.i:"type_error:SafeUrl"}
var Pa=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\/\w+|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i,Qa=/^data:(.*);base64,[a-z0-9+\/]+=*$/i,Ra=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function Sa(a){if(a instanceof L)return a;a="object"==typeof a&&a.h?a.g():String(a);Ra.test(a)||(a="about:invalid#zClosurez");return new L(a,M)}
var M={},Ta=new L("about:invalid#zClosurez",M);var Ua={};function O(a,b,c){this.i=c===Ua?a:"";this.h=!0}O.prototype.g=function(){return this.i.toString()};O.prototype.toString=function(){return this.i.toString()};function Va(a,b,c,d){a=a instanceof L?a:Sa(a);b=b||n;c=c instanceof K?c instanceof K&&c.constructor===K&&c.j===Oa?c.i:"type_error:Const":c||"";return void 0!==d?b.open(N(a),c,d):b.open(N(a),c)};var Wa=I("Trident")||I("MSIE"),Xa=I("Edge")||Wa,Ya=I("Gecko")&&!(-1!=H.toLowerCase().indexOf("webkit")&&!I("Edge"))&&!(I("Trident")||I("MSIE"))&&!I("Edge"),Za=I("Macintosh");function $a(a){a&&"function"==typeof a.u&&a.u()};function P(){this.h=this.h;this.g=this.g}P.prototype.h=!1;P.prototype.u=function(){this.h||(this.h=!0,this.j())};P.prototype.j=function(){if(this.g)for(;this.g.length;)this.g.shift()()};function Q(a,b){this.type=a;this.target=b;this.i=!1}Q.prototype.g=function(){this.i=!0};var ab=function(){if(!n.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});try{n.addEventListener("test",p,b),n.removeEventListener("test",p,b)}catch(c){}return a}();function R(a){Q.call(this,a?a.type:"");this.relatedTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType="";this.h=null;if(a){var b=this.type=a.type,c=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;var d=a.relatedTarget;if(d){if(Ya){a:{try{t(d.nodeName);var e=!0;break a}catch(f){}e=!1}e||(d=null)}}else"mouseover"==
b?d=a.fromElement:"mouseout"==b&&(d=a.toElement);this.relatedTarget=d;c?(this.clientX=void 0!==c.clientX?c.clientX:c.pageX,this.clientY=void 0!==c.clientY?c.clientY:c.pageY,this.screenX=c.screenX||0,this.screenY=c.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
a.metaKey;this.pointerId=a.pointerId||0;this.pointerType="string"===typeof a.pointerType?a.pointerType:bb[a.pointerType]||"";this.state=a.state;this.h=a;a.defaultPrevented&&R.m.g.call(this)}}ka(R,Q);var bb={2:"touch",3:"pen",4:"mouse"};R.prototype.g=function(){R.m.g.call(this);var a=this.h;a.preventDefault?a.preventDefault():a.returnValue=!1};var S="closure_listenable_"+(1E6*Math.random()|0);var cb=0;function db(a,b,c,d,e){this.listener=a;this.g=null;this.src=b;this.type=c;this.capture=!!d;this.i=e;this.key=++cb;this.h=this.o=!1}function eb(a){a.h=!0;a.listener=null;a.g=null;a.src=null;a.i=null};function T(a){this.src=a;this.g={};this.h=0}T.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var g;a:{for(g=0;g<a.length;++g){var h=a[g];if(!h.h&&h.listener==b&&h.capture==!!d&&h.i==e)break a}g=-1}-1<g?(b=a[g],c||(b.o=!1)):(b=new db(b,this.src,f,!!d,e),b.o=c,a.push(b));return b};var U="closure_lm_"+(1E6*Math.random()|0),V={},fb=0;function gb(a,b,c,d,e){if(d&&d.once)return hb(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)gb(a,b[f],c,d,e);return null}c=ib(c);return a&&a[S]?a.g(b,c,q(d)?!!d.capture:!!d,e):jb(a,b,c,!1,d,e)}
function jb(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=q(e)?!!e.capture:!!e,h=kb(a);h||(a[U]=h=new T(a));c=h.add(b,c,d,g,f);if(c.g)return c;d=lb();c.g=d;d.src=a;d.listener=c;if(a.addEventListener)ab||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(mb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");fb++;return c}
function lb(){function a(c){return b.call(a.src,a.listener,c)}var b=nb;return a}function hb(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)hb(a,b[f],c,d,e);return null}c=ib(c);return a&&a[S]?a.h(b,c,q(d)?!!d.capture:!!d,e):jb(a,b,c,!0,d,e)}
function ob(a){if("number"!==typeof a&&a&&!a.h){var b=a.src;if(b&&b[S])b.i(a);else{var c=a.type,d=a.g;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(mb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);fb--;if(c=kb(b)){d=a.type;if(d in c.g){var e=c.g[d],f=Ca(e,a),g;(g=0<=f)&&Array.prototype.splice.call(e,f,1);g&&(eb(a),0==c.g[d].length&&(delete c.g[d],c.h--))}0==c.h&&(c.src=null,b[U]=null)}else eb(a)}}}
function mb(a){return a in V?V[a]:V[a]="on"+a}function nb(a,b){if(a.h)a=!0;else{b=new R(b,this);var c=a.listener,d=a.i||a.src;a.o&&ob(a);a=c.call(d,b)}return a}function kb(a){a=a[U];return a instanceof T?a:null}var pb="__closure_events_fn_"+(1E9*Math.random()>>>0);function ib(a){if("function"===typeof a)return a;a[pb]||(a[pb]=function(b){return a.handleEvent(b)});return a[pb]};function W(a){P.call(this);this.l=a;this.i={}}ka(W,P);var qb=[];function rb(a){Ma(a.i,function(b,c){this.i.hasOwnProperty(c)&&ob(b)},a);a.i={}}W.prototype.j=function(){W.m.j.call(this);rb(this)};W.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented");};function sb(a,b,c){b=void 0===b?!1:b;c=void 0===c?!1:c;P.call(this);this.i=a||document.body;this.s=!!b;this.A=!!c;this.l=new W(this);a=ja($a,this.l);this.h?a():(this.g||(this.g=[]),this.g.push(a));a=this.l;b=this.i;c=this.B;var d="click";Array.isArray(d)||(d&&(qb[0]=d.toString()),d=qb);for(var e=0;e<d.length;e++){var f=gb(b,d[e],c||a.handleEvent,!1,a.l||a);if(!f)break;a.i[f.key]=f}}m(sb,P);
sb.prototype.B=function(a){if(!(0!=a.h.button||Za&&a.ctrlKey||a.i))for(var b=a.target;b&&b!=this.i;){if(b.tagName&&"a"==b.tagName.toLowerCase()){var c=b.getAttribute("href")||b.getAttributeNS("http://www.w3.org/1999/xlink","href"),d=za(c);if(c!=d){a:{b=void 0;try{var e=F(d)[3];b=G(e,!0)}catch(h){h=ra(h);if(h instanceof z){b=!1;break a}throw h.g;}if(e=null!=b){e=(wa(),va);var f=ua;b=Object.is(e,f)||null==e&&null==f?b.toLocaleLowerCase():b.toLowerCase();e=".google.com"===b.substr(b.length-11|0,11)}b=
e}if(!b)if(this.A){c=za(d);if(Object.is(c,d)||null==c&&null==d)d="//www.google.com/url?q="+v(encodeURIComponent(d)),d=v(d)+"&sa=D";d+="&source=editors"}else d=this.s?c:d;f=d;b=void 0;d={target:"_blank",noreferrer:!0};c=window;if(f instanceof L)e=f;else{e="undefined"!=typeof f.href?f.href:String(f);if(!(e instanceof L))if(e="object"==typeof e&&e.h?e.g():String(e),Ra.test(e))e=new L(e,M);else{e=String(e);e=e.replace(/(%0A|%0D)/g,"");var g=e.match(Qa);e=g&&Pa.test(g[1])?new L(e,M):null}e=e||Ta}f=d.target||
f.target;g=[];for(b in d)switch(b){case "width":case "height":case "top":case "left":g.push(b+"="+d[b]);break;case "target":case "noopener":case "noreferrer":break;default:g.push(b+"="+(d[b]?1:0))}b=g.join(",");if((I("iPhone")&&!I("iPod")&&!I("iPad")||I("iPad")||I("iPod"))&&c.navigator&&c.navigator.standalone&&f&&"_self"!=f)b="A",g=document,b=String(b),"application/xhtml+xml"===g.contentType&&(b=b.toLowerCase()),g=b=g.createElement(b),e=e instanceof L?e:Sa(e),g.href=N(e),b.setAttribute("target",f),
d.noreferrer&&b.setAttribute("rel","noreferrer"),d=document.createEvent("MouseEvent"),d.initMouseEvent("click",!0,!0,c,1),b.dispatchEvent(d);else if(d.noreferrer){if(c=Va("",c,f,b),d=N(e),c){Xa&&-1!=d.indexOf(";")&&(d="'"+d.replace(/'/g,"%27")+"'");c.opener=null;Ja.test(d)&&(-1!=d.indexOf("&")&&(d=d.replace(Da,"&amp;")),-1!=d.indexOf("<")&&(d=d.replace(Ea,"&lt;")),-1!=d.indexOf(">")&&(d=d.replace(Fa,"&gt;")),-1!=d.indexOf('"')&&(d=d.replace(Ga,"&quot;")),-1!=d.indexOf("'")&&(d=d.replace(Ha,"&#39;")),
-1!=d.indexOf("\x00")&&(d=d.replace(Ia,"&#0;")));d='<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+d+'">';if(void 0===J)if(b=null,(e=n.trustedTypes)&&e.createPolicy){try{b=e.createPolicy("goog#html",{createHTML:r,createScript:r,createScriptURL:r})}catch(h){n.console&&n.console.error(h.message)}J=b}else J=b;d=(b=J)?b.createHTML(d):d;d=new O(d,null,Ua);(c=c.document)&&c.write&&(c.write(d instanceof O&&d.constructor===O?d.i:"type_error:SafeHtml"),c.close())}}else(c=
Va(e,c,f,b))&&d.noopener&&(c.opener=null);a.g();break}}b=b.parentNode}};function tb(a,b,c){new sb(a,void 0===b?!1:b,void 0===c?!1:c)}var X=["DOCS_installLinkReferrerSanitizer"],Y=n;X[0]in Y||"undefined"==typeof Y.execScript||Y.execScript("var "+X[0]);for(var Z;X.length&&(Z=X.shift());)X.length||void 0===tb?Y[Z]&&Y[Z]!==Object.prototype[Z]?Y=Y[Z]:Y=Y[Z]={}:Y[Z]=tb;}).call(this);
</script><script type="text/javascript" nonce="">DOCS_installLinkReferrerSanitizer( undefined,  true ,  false );</script><div id="fatkun-drop-panel">
        <a id="fatkun-drop-panel-close-btn">×</a>
            <div id="fatkun-drop-panel-inner">
                <div class="fatkun-content">
                    <svg class="fatkun-icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="5892"><path d="M494.933333 782.933333c2.133333 2.133333 4.266667 4.266667 8.533334 6.4h8.533333c6.4 0 10.666667-2.133333 14.933333-6.4l2.133334-2.133333 275.2-275.2c8.533333-8.533333 8.533333-21.333333 0-29.866667-8.533333-8.533333-21.333333-8.533333-29.866667 0L533.333333 716.8V128c0-12.8-8.533333-21.333333-21.333333-21.333333s-21.333333 8.533333-21.333333 21.333333v588.8L249.6 475.733333c-8.533333-8.533333-21.333333-8.533333-29.866667 0-8.533333 8.533333-8.533333 21.333333 0 29.866667l275.2 277.333333zM853.333333 874.666667H172.8c-12.8 0-21.333333 8.533333-21.333333 21.333333s8.533333 21.333333 21.333333 21.333333H853.333333c12.8 0 21.333333-8.533333 21.333334-21.333333s-10.666667-21.333333-21.333334-21.333333z" p-id="5893"></path></svg>
                    <div class="fatkun-title">Drag and Drop</div>
                    <div class="fatkun-desc">The image will be downloaded</div>
                </div>
            </div>
    </div></body></html>